/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.magonono.wandapi;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.magonono.wandapi.controller.WandApiController;
import com.magonono.wandapi.log.LogManager;
import com.magonono.wandapi.model.WandApiModel;
import com.magonono.wandapi.view.Beautifier;
import javax.swing.text.*;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.*;
import java.awt.event.*;

import org.springframework.boot.WebApplicationType;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;


/**
 * Created for the WandApi project.
 *
 * @author Cesar "Aran" Pasillas
 */
@SpringBootApplication
public class WandApiFrame extends JFrame {


    private WandApiController wandApiController;
    
    private transient LogManager<WandApiFrame> log;

    private DefaultListModel<String> historyListModel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JPanel Historial;
    private javax.swing.JTextPane console;
    private javax.swing.JLabel historyLabel;
    private javax.swing.JList<String> historyList;
    private javax.swing.JScrollPane historyScrollPane;
    private javax.swing.JSeparator historySeparator;
    private javax.swing.JComboBox<String> httpMethodsComboBox;
    private javax.swing.JLabel httpRequestName;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel main;
    private javax.swing.JTextPane requestTextPane;
    private javax.swing.JLabel responseCodeLabel;
    private javax.swing.JTextPane responseTextPane;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel saveRequestLabel;
    private javax.swing.JButton sendButton1;
    private javax.swing.JLabel statusCodeLabel;
    private javax.swing.JTextField urlTextInput;
    // End of variables declaration//GEN-END:variables

    public WandApiFrame(WandApiController wandApiController) {
        this.wandApiController = wandApiController;
        loadHistoryList();
        initComponents();
        log = new LogManager("WandApi");
    }

    /**
     * Creates new form WandApiFrame
     */
    public WandApiFrame() {
        loadHistoryList();
        initComponents();
        log = new LogManager("WandApi");
        //jSplitPane1 = new JSplitPane(JSplitPane.VERTICAL_SPLIT, jScrollPane2, jScrollPane3);
        //jSplitPane1.setComponentZOrder(jScrollPane2, WIDTH);
        //jSplitPane1.setComponentZOrder(jScrollPane3, WIDTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        Historial = new javax.swing.JPanel();
        historyLabel = new javax.swing.JLabel();
        historyScrollPane = new javax.swing.JScrollPane();
        historyList = new javax.swing.JList<>();
        historySeparator = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        main = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jSplitPane1 = new JSplitPane(JSplitPane.VERTICAL_SPLIT, jScrollPane2, jScrollPane3);
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTextPane = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        responseTextPane = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextPane();
        statusCodeLabel = new javax.swing.JLabel();
        responseCodeLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        inputPanel = new javax.swing.JPanel();
        httpMethodsComboBox = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();
        urlTextInput = new javax.swing.JTextField();
        httpRequestName = new javax.swing.JLabel();
        saveRequestLabel = new javax.swing.JLabel();
        sendButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(255, 255, 255));

        Historial.setBackground(new java.awt.Color(255, 255, 255));

        historyLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        historyLabel.setForeground(new java.awt.Color(102, 102, 255));
        historyLabel.setText("History");

        historyList.setBackground(new java.awt.Color(102, 102, 255));
        historyList.setForeground(new java.awt.Color(255, 255, 255));
        historyList.setModel(historyListModel);
        historyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyListMouseClicked(evt);
            }
        });
        historyScrollPane.setViewportView(historyList);

        historySeparator.setBackground(new java.awt.Color(204, 204, 255));
        historySeparator.setForeground(new java.awt.Color(204, 204, 255));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear History");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HistorialLayout = new javax.swing.GroupLayout(Historial);
        Historial.setLayout(HistorialLayout);
        HistorialLayout.setHorizontalGroup(
            HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historySeparator)
                    .addGroup(HistorialLayout.createSequentialGroup()
                        .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addComponent(historyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HistorialLayout.setVerticalGroup(
            HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historySeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(12, 12, 12))
        );

        main.setBackground(new java.awt.Color(204, 204, 255));

        jSplitPane2.setDividerLocation(420);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jScrollPane2.setViewportView(requestTextPane);

        jSplitPane1.setTopComponent(jScrollPane2);

        responseTextPane.setEditable(false);
        responseTextPane.setBackground(new java.awt.Color(255, 255, 255));
        StyledDocument doc = responseTextPane.getStyledDocument();

        // Create key and value styles
        Style keyStyle = responseTextPane.addStyle("KeyStyle", null);
        StyleConstants.setForeground(keyStyle, Color.RED);  // Keys in red

        Style valueStyle = responseTextPane.addStyle("ValueStyle", null);
        StyleConstants.setForeground(valueStyle, Color.GREEN);
        jScrollPane3.setViewportView(responseTextPane);

        jSplitPane1.setRightComponent(jScrollPane3);

        jSplitPane2.setLeftComponent(jSplitPane1);

        console.setEditable(false);
        console.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(console);

        jSplitPane2.setBottomComponent(jScrollPane1);

        statusCodeLabel.setText("Status Code:");

        responseCodeLabel.setForeground(new java.awt.Color(0, 153, 51));
        responseCodeLabel.setText("200");

        jToggleButton1.setText("Activate Beautify");
        jToggleButton1.setToolTipText("Activates the JSON Beautification");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        httpMethodsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST", "DELETE", "PUT", "PATCH" }));
        httpMethodsComboBox.setToolTipText("Http Method");
        httpMethodsComboBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        httpMethodsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                httpMethodsComboBoxActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(102, 102, 255));
        saveButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setToolTipText("Button to send the request");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        urlTextInput.setText("https://api.thecatapi.com/v1/images/search");
        urlTextInput.setToolTipText("");

        httpRequestName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        httpRequestName.setText("request");

        saveRequestLabel.setText("icon type");

        sendButton1.setBackground(new java.awt.Color(102, 102, 255));
        sendButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        sendButton1.setForeground(new java.awt.Color(255, 255, 255));
        sendButton1.setText("Send");
        sendButton1.setToolTipText("Button to send the request");
        sendButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(httpMethodsComboBox, 0, 86, Short.MAX_VALUE)
                    .addComponent(saveRequestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(urlTextInput, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(httpRequestName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(httpRequestName)
                    .addComponent(saveRequestLabel)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(httpMethodsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urlTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)
                        .addGap(143, 143, 143)
                        .addComponent(statusCodeLabel)
                        .addGap(4, 4, 4)
                        .addComponent(responseCodeLabel))
                    .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSplitPane2))
                .addContainerGap())
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusCodeLabel)
                        .addComponent(jToggleButton1))
                    .addComponent(responseCodeLabel))
                .addGap(9, 9, 9)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(Historial, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Historial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        //lstHistoryList.(httpMethod + " " + url);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void httpMethodsComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_httpMethodsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_httpMethodsComboBoxActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sendButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButton1ActionPerformed

        Beautifier beautifier = new Beautifier(responseTextPane);

        System.out.println(urlTextInput.getText());
        String url = urlTextInput.getText();
        String httpMethod = (String) httpMethodsComboBox.getSelectedItem();

        StyledDocument consoleStyle = console.getStyledDocument();

        Style consoleTextStyle = console.addStyle("consoleTextStyle", null);
        try {
            String json = wandApiController.sendRequest(urlTextInput.getText(),
            (String) httpMethodsComboBox.getSelectedItem());
            

            StyleConstants.setForeground(consoleTextStyle, Color.BLACK);

            consoleStyle.insertString(consoleStyle.getLength(), log.logInfo(" " +httpMethod +": " + url) +"\n", consoleTextStyle);
        } catch (BadLocationException ex) {
            Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException npx){
            try{
                consoleStyle.insertString(consoleStyle.getLength(), log.logInfo(" " +npx.getMessage()) +"\n", consoleTextStyle);
                Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, npx);
            } catch (BadLocationException ex) {
                Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        log.logInfo("GET: " + url);

        responseTextPane.setText(""); //Clear before send any response.

        WandApiModel request = wandApiController.sendApiRequest(urlTextInput.getText(), httpMethod, requestTextPane.getText());

        responseTextPane.setText(String.valueOf(request.getBodyResponse()));

        responseCodeLabel.setText(request.getCodeStatus());
        
        //send to the historial
        //historyList.getSelectedValue()
        
        historyListModel.addElement(httpMethod + " " + url);
    }//GEN-LAST:event_sendButton1ActionPerformed

    private void historyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyListMouseClicked
        String item = historyList.getSelectedValue();
        int split = item.indexOf(" ");

        urlTextInput.setText(item.substring(split + 1));
        httpMethodsComboBox.setSelectedItem(item.substring(0,split));

    }//GEN-LAST:event_historyListMouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt)  {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {

            String json = WandApiController.prettyJson(requestTextPane.getText());
            requestTextPane.setText(json == null || json.equals("null") ? "" : json);

        } catch(JsonProcessingException jpe){
            console.setText("JSON malformed");
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        var ctx = new SpringApplicationBuilder(WandApiFrame.class)
                .headless(false).web(WebApplicationType.NONE).run(args);

        WandApiController controller = ctx.getBean(WandApiController.class);

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WandApiFrame(controller).setVisible(true);
            }
        });
    }

    private static void openDialog() {
        // Create a new JDialog
        JDialog dialog = new JDialog(new JFrame(), "Custom Dialog", true);
        dialog.setSize(300, 200);
        dialog.setLayout(new FlowLayout());

        // Add custom components
        JLabel label = new JLabel("The request will be open:\n");
        JButton closeButton = new JButton("Close");

        closeButton.addActionListener(e -> dialog.dispose()); // Close the dialog when the button is clicked

        dialog.add(label);
        dialog.add(closeButton);
        dialog.setVisible(true); // Show the dialog
    }

    private void loadHistoryList() {
        
        historyListModel = new DefaultListModel<>();
        
    }
}
