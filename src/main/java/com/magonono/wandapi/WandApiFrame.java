/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.magonono.wandapi;

import com.magonono.wandapi.controller.WandApiController;
import com.magonono.wandapi.log.LogManager;
import com.magonono.wandapi.view.Beautifier;
import javax.swing.text.*;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.*;
import java.awt.event.*;
import org.netbeans.lib.awtextra.*;
import org.springframework.boot.WebApplicationType;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;


/**
 * Created for the WandApi project.
 *
 * @author Cesar "Aran" Pasillas
 */
@SpringBootApplication
public class WandApiFrame extends JFrame {


    private WandApiController wandApiController;
    
    private transient LogManager<WandApiFrame> log;

    private DefaultListModel<String> historyListModel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JPanel Historial;
    private javax.swing.JTextPane console;
    private javax.swing.JLabel historyLabel;
    private javax.swing.JList<String> historyList;
    private javax.swing.JScrollPane historyScrollPane;
    private javax.swing.JSeparator historySeparator;
    private javax.swing.JComboBox<String> httpMethodsComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel main;
    private javax.swing.JLabel requestLabel;
    private javax.swing.JLabel requestLabel1;
    private javax.swing.JLabel requestLabel2;
    private javax.swing.JTextPane requestTextPane;
    private javax.swing.JLabel responseCodeLabel;
    private javax.swing.JTextPane responseTextPane;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel statusCodeLabel;
    private javax.swing.JTextField urlTextInput;
    // End of variables declaration//GEN-END:variables

    public WandApiFrame(WandApiController wandApiController) {
        this.wandApiController = wandApiController;
        loadHistoryList();
        initComponents();
        log = new LogManager("WandApi");
    }

    /**
     * Creates new form WandApiFrame
     */
    public WandApiFrame() {
        loadHistoryList();
        initComponents();
        log = new LogManager("WandApi");
        //jSplitPane1 = new JSplitPane(JSplitPane.VERTICAL_SPLIT, jScrollPane2, jScrollPane3);
        //jSplitPane1.setComponentZOrder(jScrollPane2, WIDTH);
        //jSplitPane1.setComponentZOrder(jScrollPane3, WIDTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        Historial = new javax.swing.JPanel();
        historyLabel = new javax.swing.JLabel();
        historyScrollPane = new javax.swing.JScrollPane();
        historyList = new javax.swing.JList<>();
        historySeparator = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        main = new javax.swing.JPanel();
        jSplitPane1 = new JSplitPane(JSplitPane.VERTICAL_SPLIT, jScrollPane2, jScrollPane3);
        httpMethodsComboBox = new javax.swing.JComboBox<>();
        urlTextInput = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTextPane = new javax.swing.JTextPane();
        statusCodeLabel = new javax.swing.JLabel();
        responseCodeLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        responseTextPane = new javax.swing.JTextPane();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextPane();
        requestLabel = new javax.swing.JLabel();
        requestLabel1 = new javax.swing.JLabel();
        requestLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(255, 255, 255));

        Historial.setBackground(new java.awt.Color(255, 255, 255));

        historyLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        historyLabel.setForeground(new java.awt.Color(102, 102, 255));
        historyLabel.setText("History");

        historyList.setBackground(new java.awt.Color(102, 102, 255));
        historyList.setForeground(new java.awt.Color(255, 255, 255));
        historyList.setModel(historyListModel);
        historyScrollPane.setViewportView(historyList);

        historySeparator.setBackground(new java.awt.Color(204, 204, 255));
        historySeparator.setForeground(new java.awt.Color(204, 204, 255));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear History");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HistorialLayout = new javax.swing.GroupLayout(Historial);
        Historial.setLayout(HistorialLayout);
        HistorialLayout.setHorizontalGroup(
            HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historySeparator)
                    .addGroup(HistorialLayout.createSequentialGroup()
                        .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addComponent(historyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HistorialLayout.setVerticalGroup(
            HistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historySeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(12, 12, 12))
        );

        main.setBackground(new java.awt.Color(204, 204, 255));

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        httpMethodsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST", "DELETE", "PUT", "PATCH" }));
        httpMethodsComboBox.setToolTipText("Http Method");
        httpMethodsComboBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        httpMethodsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                httpMethodsComboBoxActionPerformed(evt);
            }
        });

        urlTextInput.setText("https://api.thecatapi.com/v1/images/search");
        urlTextInput.setToolTipText("");

        sendButton.setBackground(new java.awt.Color(102, 102, 255));
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.setToolTipText("Button to send the request");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(requestTextPane);

        statusCodeLabel.setText("Status Code:");

        responseCodeLabel.setForeground(new java.awt.Color(0, 153, 51));
        responseCodeLabel.setText("200");

        responseTextPane.setEditable(false);
        responseTextPane.setBackground(new java.awt.Color(255, 255, 255));
        StyledDocument doc = responseTextPane.getStyledDocument();

        // Create key and value styles
        Style keyStyle = responseTextPane.addStyle("KeyStyle", null);
        StyleConstants.setForeground(keyStyle, Color.RED);  // Keys in red

        Style valueStyle = responseTextPane.addStyle("ValueStyle", null);
        StyleConstants.setForeground(valueStyle, Color.GREEN);
        jScrollPane3.setViewportView(responseTextPane);

        jToggleButton1.setText("Activate Beautify");
        jToggleButton1.setToolTipText("Activates the JSON Beautification");

        console.setEditable(false);
        console.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(console);

        requestLabel.setText("Output:");

        requestLabel1.setText("Request:");

        requestLabel2.setText("Response:");

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainLayout.createSequentialGroup()
                                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(436, 436, 436)
                                .addComponent(jToggleButton1)
                                .addGap(11, 11, 11)
                                .addComponent(statusCodeLabel)
                                .addGap(4, 4, 4)
                                .addComponent(responseCodeLabel))
                            .addComponent(requestLabel2)
                            .addComponent(requestLabel)
                            .addComponent(requestLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainLayout.createSequentialGroup()
                                .addComponent(httpMethodsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(urlTextInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(httpMethodsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(urlTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1)
                    .addComponent(statusCodeLabel)
                    .addComponent(responseCodeLabel)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(requestLabel1)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestLabel2)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(requestLabel)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(Historial, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Historial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        Beautifier beautifier = new Beautifier(responseTextPane);

        System.out.println(urlTextInput.getText());
        String url = urlTextInput.getText();
        String httpMethod = (String) httpMethodsComboBox.getSelectedItem();

        StyledDocument consoleStyle = console.getStyledDocument();

        Style consoleTextStyle = console.addStyle("consoleTextStyle", null);
        try {
            String json = wandApiController.sendRequest(urlTextInput.getText(),
            (String) httpMethodsComboBox.getSelectedItem());

        StyleConstants.setForeground(consoleTextStyle, Color.BLACK);

            consoleStyle.insertString(consoleStyle.getLength(), log.logInfo(" " +httpMethod +": " + url) +"\n", consoleTextStyle);
        } catch (BadLocationException ex) {
            Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException npx){
            try{
                consoleStyle.insertString(consoleStyle.getLength(), log.logInfo(" " +npx.getMessage()) +"\n", consoleTextStyle);
                Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, npx);
            } catch (BadLocationException ex) {
                Logger.getLogger(WandApiFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        log.logInfo("GET: " + url);

        responseTextPane.setText(""); //Clear before send any response.

        responseTextPane.setText(wandApiController.sendApiRequest(urlTextInput.getText(), httpMethod));
        
        //send to the historial
        //historyList.getSelectedValue()
        
        historyListModel.addElement(httpMethod + " " + url);
        //lstHistoryList.(httpMethod + " " + url);
    }//GEN-LAST:event_sendButtonActionPerformed

    private void httpMethodsComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_httpMethodsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_httpMethodsComboBoxActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WandApiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        var ctx = new SpringApplicationBuilder(WandApiFrame.class)
                .headless(false).web(WebApplicationType.NONE).run(args);

        WandApiController controller = ctx.getBean(WandApiController.class);

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WandApiFrame(controller).setVisible(true);
            }
        });
    }



    private void loadHistoryList() {
        
        historyListModel = new DefaultListModel<>();
        
    }
}
